##############################################################################################################################################################
# You can use variable expressions within "vm" or "vm.url" property definition. E.g.:
#
#      zk.vm:                 service:jmx:rmi:///jndi/rmi://${vm.host}:${vm.port}/jmxrmi
#      zk.vm.host:            172.16.6.208
#      zk.vm.port:            9995;9996;9997
#
# will produce 3 VM definitions by combining defined single "vm.host" value and array of 3 "vm.port" values:
#
#      service:jmx:rmi:///jndi/rmi://172.16.6.208:9995/jmxrmi
#      service:jmx:rmi:///jndi/rmi://172.16.6.208:9996/jmxrmi
#      service:jmx:rmi:///jndi/rmi://172.16.6.208:9997/jmxrmi
#
# Yet if size of both "vm.host" and "vm.port" values are same, like this:
#
#      zk.vm:                 service:jmx:rmi:///jndi/rmi://${vm.host}:${vm.port}/jmxrmi
#      zk.vm.host:            172.16.6.208;172.16.6.210;172.16.6.212
#      zk.vm.port:            9995;9996;9997
#
# then it will produce 3 VM definitions by mapping array values 1:1 as this:
#
#      service:jmx:rmi:///jndi/rmi://172.16.6.208:9995/jmxrmi
#      service:jmx:rmi:///jndi/rmi://172.16.6.210:9996/jmxrmi
#      service:jmx:rmi:///jndi/rmi://172.16.6.212:9997/jmxrmi
#
# Another way to get same result would be as this:
#
#      zk.vm:                 service:jmx:rmi:///jndi/rmi://${vm.address}/jmxrmi
#      zk.vm.address:         172.16.6.208:9995;172.16.6.210:9996;172.16.6.212:9997
#
##############################################################################################################################################################
{
    zk.vm:                 service:jmx:rmi:///jndi/rmi://localhost:9995/jmxrmi
    zk.vm.user:            admin
    zk.vm.pass:            admin
    zk.vm.reconnect.sec:   10
    zk.agent.options:      *:*!!60000
    zk.source.fqn:         SERVICE=@bean:org.apache.ZooKeeperService:name0=*/?ClientPort#SERVER=@bean:java.lang:type=Runtime/?Name
}
##############################################################################################################################################################
{
    kafka.vm:               kafka:zk://127.0.0.1:2181
    kafka.vm.user:          admin
    kafka.vm.pass:          admin
    kafka.vm.reconnect.sec: 10
    kafka.agent.options:    *:*!!60000
    kafka.source.fqn:       SERVICE=@bean:java.lang:type=Runtime/?Name#SERVER=@bean:kafka.server:id=?,type=app-info#DATACENTER=@bean:kafka.server:type=KafkaServer,name=ClusterId/?Value
}
##############################################################################################################################################################
{
    solr.vm:                 solr:zk://172.16.6.208:2181
    solr.vm.user:            admin
    solr.vm.pass:            admin
    solr.vm.reconnect.sec:   10
    solr.agent.options:      *:*!!5000
    solr.source.fqn:         SERVER=@bean:solr:dom1=core,dom2=?,dom3=*,reporter=*,category=*,scope=core,name=*
    solr.custom.urlPattern:  service:jmx:rmi:///jndi/rmi://{0}:{1,number,######}/jmxrmi
    solr.custom.port:        18983
}
##############################################################################################################################################################