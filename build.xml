<project name="tnt4j-stream-jmx" default="stream-jmx" basedir=".">

    <echo message="Processing ${ant.project.name}${line.separator}" level="info"/>

    <condition property="root" value="${basedir}/.">
        <not>
            <isset property="root"/>
        </not>
    </condition>

    <!-- Import default properties for jKool builds -->
    <import file="${root}/build-properties.xml"/>

    <property name="src" value="src"/>
    <property name="lib" value="lib"/>
    <property name="classes" value="classes"/>
    <property name="bin" value="bin"/>
    <property name="doc" value="${project-build}/doc"/>
    <property name="jar" value="${project-build}/tnt4j-stream-jmx.jar"/>
    <property name="docpkg" value="org.tnt4j.stream.jmx.*"/>

    <target name="init">
        <tstamp/>
        <mkdir dir="${classes}"/>
        <mkdir dir="${project-build}/lib"/>
        <copy todir="${lib}" quiet="true" failonerror="false">
            <fileset dir="${project-build}/../tnt4j">
                <include name="tnt4j-api-final-all.jar"/>
            </fileset>
        </copy>
        <copy todir="${project-build}/lib">
            <fileset dir="${lib}">
                <include name="*.jar"/>
            </fileset>
        </copy>
    </target>

    <target name="doc" depends="compile" description="build javadoc">
        <delete dir="${doc}"/>
        <javadoc destdir="${doc}"
                 sourcepath="${src}"
                 packagenames="${docpkg}"
                 Doctitle="tnt4j-stream-jmx Framework"
                 Windowtitle="tnt4j-stream-jmx Framework"
                 Header="Version ${version}"
                 access="protected"
                 use="true"
                 notree="false"
                 nonavbar="false"
                 noindex="false"
                 splitindex="true"
                 author="true"
                 version="true"
                 nodeprecatedlist="false"
                 nodeprecated="false">
            <classpath>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </javadoc>
    </target>

    <!-- Compile into ${classes} directory -->
    <target name="compile" depends="init" description="compile the source">
        <javac destdir="${classes}" debug="true" debuglevel="${debuglevel}" source="${source}" target="${target}">
            <src path="${src}"/>
            <classpath>
                <fileset dir="${project-build}/lib"/>
            </classpath>
        </javac>
    </target>

    <target name="clean" description="clean up">
        <delete dir="${classes}"/>
        <echo message="Clean of ${ant.project.name} Complete${line.separator}" level="info"/>
        <delete dir="${project-build}"/>
        <echo message="Deleting old archives" level="info"/>
        <delete dir="${project-build}" includes="*.jar,*-all.zip"/>
    </target>

    <target name="stream-jmx" depends="init,compile" description="build ${prodname} package">
        <jar jarfile="${jar}" basedir="${classes}" update="false">
            <manifest>
                <attribute name="Implementation-Vendor" value="${vendor}"/>
                <attribute name="Implementation-Title" value="${prodname}"/>
                <attribute name="Implementation-Version" value="${version}"/>
                <attribute name="Premain-Class" value="org.tnt4j.stream.jmx.SamplingAgent"/>
            </manifest>
        </jar>
        <copy todir="${project-build}">
            <fileset dir="${root}">
                <include name="README.md"/>
                <include name="LICENSE"/>
            </fileset>
        </copy>
        <copy todir="${project-build}/config">
            <fileset dir="${root}/config">
                <include name="log4j.properties"/>
                <include name="tnt4j.properties"/>
                <include name="tnt4j-tokens.properties"/>
            </fileset>
        </copy>
        <copy todir="${project-build}/bin">
            <fileset dir="${bin}">
                <include name="stream-jmx.*"/>
            </fileset>
        </copy>
        <echo message="Build of ${ant.project.name} Complete${line.separator}" level="info"/>
    </target>

    <target name="all" depends="stream-jmx,doc" description="generate the distribution"/>
    <target name="rebuild" depends="clean,all" description="clean and build"/>
</project>
